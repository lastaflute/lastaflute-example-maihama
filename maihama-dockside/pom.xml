<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.docksidestage</groupId>
		<artifactId>maihama-base</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath>../maihama-base/pom.xml</relativePath>
	</parent>

	<artifactId>maihama-dockside</artifactId>
	<packaging>war</packaging>

	<name>Dockside Application in Maihama</name>
	<description>example web project, HTML style, for LastaFlute with Thymeleaf</description>
	<url>http://dbflute.org/lastaflute</url>
	<inceptionYear>2015</inceptionYear>

	<properties>
	</properties>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>The DBFlute Project</name>
		<url>http://dbflute.org/</url>
	</organization>

	<developers>
		<developer>
			<id>jflute</id>
			<timezone>+9</timezone>
		</developer>
	</developers>

	<build>
		<defaultGoal>war</defaultGoal>
		<finalName>${project.artifactId}</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>unpack-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore /> <!-- to avoid warning -->
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-boot</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
							<!-- servlet container libraries are located as war resource -->
							<includeArtifactIds>
								javax.servlet-api, javax.servlet.jsp, javax.servlet.jsp-api
								, tomcat-boot, tomcat-embed-core, tomcat-embed-logging-juli
								, tomcat-jasper, tomcat-jasper-el, tomcat-el-api, tomcat-jsp-api, ecj
							</includeArtifactIds>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<!-- servlet container libraries are not in application -->
					<packagingExcludes>
						WEB-INF/lib/javax.servlet-api-*.jar, WEB-INF/lib/javax.servlet.jsp-*.jar
						, WEB-INF/lib/tomcat-*.jar, WEB-INF/lib/ecj-*.jar
					</packagingExcludes>
					<webResources>
						<resource>
							<directory>${project.build.outputDirectory}</directory>
							<includes>
								<!-- boot class is executed by java command directly -->
								<include>**/*Boot*.class</include>
								<!-- properties may be used by the boot class -->
								<include>*_config.properties</include>
								<include>*_env*.properties</include>
								<include>tomcat_*.properties</include>
							</includes>
						</resource>
						<resource>
							<directory>${basedir}/../maihama-common/src/main/resources</directory>
							<includes>
								<!-- also common's properties -->
								<include>*_config.properties</include>
								<include>*_env*.properties</include>
								<include>tomcat_*.properties</include>
							</includes>
						</resource>
						<resource>
							<directory>${basedir}/target/lastadoc</directory>
							<targetPath>WEB-INF/classes</targetPath>
							<includes>
								<!-- for swagger UI on deploy environment -->
								<include>swagger.json</include>
							</includes>
						</resource>
					</webResources>
					<archive>
						<manifest>
							<mainClass>org.docksidestage.DocksideBoot</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->
		<!--                                                                Main Framework -->
		<!--                                                                 = = = = = = = -->
		<!-- application -->
		<dependency>
			<groupId>org.docksidestage</groupId>
			<artifactId>maihama-common</artifactId>
			<version>${app.version}</version>
		</dependency>

		<!-- LastaFlute -->
		<dependency>
			<groupId>org.lastaflute.html</groupId>
			<artifactId>lasta-thymeleaf</artifactId>
		</dependency>

		<!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->
		<!--                                                               Partner Library -->
		<!--                                                               = = = = = = = = -->
		<!-- boot -->
		<dependency>
			<groupId>org.dbflute.tomcat</groupId>
			<artifactId>tomcat-boot</artifactId>
		</dependency>

		<!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = -->
		<!--                                                          GoodNeighbor Library -->
		<!--                                                           = = = = = = = = = = -->
		<!-- commons -->
		<dependency> <!-- used for multipart request -->
			<groupId>org.apache.commons</groupId> <!-- #jakarta -->
			<artifactId>commons-fileupload2-jakarta-servlet6</artifactId>
		</dependency>
	</dependencies>
</project>
